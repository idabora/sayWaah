<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {{!-- <link rel="stylesheet" href="header.css"> --}}
    <title>Login</title>
</head>

<body>
    <div class="header">
        {{!-- {{>header}} --}}
        <div class="section">
            <div class="image">
                <h1>"No story lives unless someone wants to listen"</h1>
            </div>
            <div class="form">
                <div class="container">
                    <h2>Want to tell a Story ? or Read One</h2>
                    <form action="/auth/login" method="post"  >
                    {{!-- <form onsubmit="handleSubmit(event)"  > --}}
                        <input type="text" id="firstname" name="firstName" placeholder="First Name" required>
                        <input type="text" id="lastname" name="lastName" placeholder="Last Name" required>
                        <input type="email" id="email" name="email" placeholder="Email" required>
                        <input type="submit" value="Submit">
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    async function handleSubmit(event) {
        event.preventDefault(); // Prevent page reload

        const firstName = document.getElementById('firstname').value;
        const lastName = document.getElementById('lastname').value; // Fixed the case here
        const email = document.getElementById('email').value;

        // Check if any fields are empty
        if (!firstName.trim() || !lastName.trim() || !email.trim()) {
            alert("All fields must be filled out");
            return;
        }

        // If all fields are filled, send the data
        const data = {
            firstName: firstName.trim(),
            lastName: lastName.trim(),
            email: email.trim()
        };

        try {
            const response = await fetch('/login', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            const result = await response.text();
            console.log("dfdfd",result,response.status); // You can handle the server's response here
            if(response.status === 403 || response.status === '403'){
                alert("User with this Email already Exist");
                return;
            } else if (response.status === 201) {
                // Redirect to the home page after successful submission
                window.location.href = '/home.html';
            }
        } catch (error) {
            console.error('Error submitting form:', error);
        }
    }
</script>

</html>
